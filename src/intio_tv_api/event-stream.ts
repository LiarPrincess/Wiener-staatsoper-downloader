import { Event } from './event';
import { Cache } from '../cache';

const cache = new Cache('event-streams');

// This was generated by 'http://www.json2ts.com', but we do not need all of those fields.
// So we will comment some of them.
export interface StreamConfig {
  // readonly id: string; // <-- This is the event id
  readonly embed: string;
  readonly streams: Stream[];
  // readonly player_configs_by_id: PlayerConfigsById;
  // readonly streams_audio: any[];
}

export interface Stream {
  readonly id: string;
  readonly label: string;
  readonly url: string;
  readonly type: string;
  readonly playback_status: string;
  readonly player_config_id: string;
  // readonly vr_config: VrConfig;
  readonly start_playback_at: number;
  readonly created: Date;
  readonly updated: Date;
}

// interface VrConfig {
//   readonly yaw?: any;
//   readonly roll?: any;
//   readonly pitch?: any;
//   readonly enabled: boolean;
// }

// interface PlayerConfigsById {
//   [key: string]: PlayerConfig;
// }

// interface PlayerConfig {
//   readonly id: string;
//   readonly player: string;
//   readonly version: string;
//   readonly license_key: string;
//   readonly analytics_key: string;
//   readonly created: Date;
//   readonly updated: Date;
// }

export async function getStream(event: Event, browserAuthorization: string): Promise<StreamConfig> {
  const url = `https://live.performa.intio.tv/api/v1/events/${event.id}/streams/`;
  const result = await cache.downloadJSON(url, {
    headers: {
      'Origin': 'https://play.wiener-staatsoper.at',
      'Host': 'live.performa.intio.tv',
      'Authorization': browserAuthorization
    }
  }) as StreamConfig;

  return result;
}
